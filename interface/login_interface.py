# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'login_ui.ui'
#
# Created by: PyQt5 UI code generator 5.15.1
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.
import time

from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtWidgets import QMessageBox

from db.models import Administrator, Ticketsman, Driver
from db.models import session
from interface.admin_interface import Ui_AdminWindow


class Ui_LoginWindow(object):
    log_type = ""
    logout_page = None

    def setupUi(self, MainWindow):
        MainWindow.setObjectName("Log in Window")
        MainWindow.resize(777, 469)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.first_name_label = QtWidgets.QLabel(self.centralwidget)
        self.first_name_label.setGeometry(QtCore.QRect(60, 90, 171, 21))
        font = QtGui.QFont()
        font.setFamily("MS Gothic")
        font.setPointSize(19)
        self.first_name_label.setFont(font)
        self.first_name_label.setObjectName("first_name_label")
        self.First_name_input = QtWidgets.QLineEdit(self.centralwidget)
        self.First_name_input.setGeometry(QtCore.QRect(230, 90, 291, 31))
        font = QtGui.QFont()
        font.setPointSize(16)
        self.First_name_input.setFont(font)
        self.First_name_input.setStyleSheet("z-index: 3;")
        self.First_name_input.setText("")
        self.First_name_input.setObjectName("First_name_input")
        self.Last_name_label = QtWidgets.QLabel(self.centralwidget)
        self.Last_name_label.setGeometry(QtCore.QRect(60, 220, 171, 21))
        font = QtGui.QFont()
        font.setFamily("MS Gothic")
        font.setPointSize(19)
        self.Last_name_label.setFont(font)
        self.Last_name_label.setObjectName("Last_name_label")
        self.last_name_input = QtWidgets.QLineEdit(self.centralwidget)
        self.last_name_input.setGeometry(QtCore.QRect(230, 220, 291, 31))
        font = QtGui.QFont()
        font.setPointSize(16)
        self.last_name_input.setFont(font)
        self.last_name_input.setStyleSheet(" setZValue:1;")
        self.last_name_input.setObjectName("last_name_input")
        self.login_button = QtWidgets.QPushButton(self.centralwidget)
        self.login_button.setGeometry(QtCore.QRect(180, 320, 391, 81))
        font = QtGui.QFont()
        font.setPointSize(26)
        self.login_button.setFont(font)
        self.login_button.setObjectName("login_button")
        self.policeman = QtWidgets.QLabel(self.centralwidget)
        self.policeman.setGeometry(QtCore.QRect(400, 20, 351, 371))
        self.policeman.setStyleSheet("")
        self.policeman.setText("")
        self.policeman.setPixmap(QtGui.QPixmap("interface/logos/policeman.png"))
        self.policeman.setScaledContents(True)
        self.policeman.setObjectName("policeman")
        self.policeman.raise_()
        self.first_name_label.raise_()
        self.First_name_input.raise_()
        self.Last_name_label.raise_()
        self.last_name_input.raise_()
        self.login_button.raise_()
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 777, 21))
        self.menubar.setObjectName("menubar")
        self.menuLog_in = QtWidgets.QMenu(self.menubar)
        self.menuLog_in.setObjectName("menuLog_in")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)
        self.log_as_admin = QtWidgets.QAction(MainWindow)
        self.log_as_admin.setObjectName("log_as_admin")
        self.log_as_ticketsman = QtWidgets.QAction(MainWindow)
        self.log_as_ticketsman.setObjectName("log_as_ticketsman")
        self.log_as_driver = QtWidgets.QAction(MainWindow)
        self.log_as_driver.setObjectName("log_as_driver")

        self.log_as_admin = QtWidgets.QAction(MainWindow)
        self.log_as_admin.setObjectName("log_as_admin")
        self.log_as_admin.triggered.connect(self.log_as_ad)
        self.log_as_admin.triggered.connect(MainWindow.close)

        self.log_as_ticketsman = QtWidgets.QAction(MainWindow)
        self.log_as_ticketsman.setObjectName("log_as_ticketsman")
        self.log_as_ticketsman.triggered.connect(self.log_as_tick)
        self.log_as_ticketsman.triggered.connect(MainWindow.close)

        self.log_as_driver = QtWidgets.QAction(MainWindow)
        self.log_as_driver.setObjectName("log_as_driver")
        self.log_as_driver.triggered.connect(self.log_as_dr)
        self.log_as_driver.triggered.connect(MainWindow.close)

        self.menuLog_in.addSeparator()
        self.menuLog_in.addAction(self.log_as_admin)
        self.menuLog_in.addAction(self.log_as_ticketsman)
        self.menuLog_in.addAction(self.log_as_driver)
        self.menubar.addAction(self.menuLog_in.menuAction())

        self.login_button.clicked.connect(self.login)
        self.login_button.clicked.connect(MainWindow.hide)
        self.login_button.clicked.connect(MainWindow.show)

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("Log in Window", "Login as{0}".format(self.log_type)))
        self.first_name_label.setText(_translate("MainWindow", "First name"))
        self.Last_name_label.setText(_translate("MainWindow", "Last name"))
        self.login_button.setText(_translate("MainWindow", "LOGIN"))
        self.menuLog_in.setTitle(_translate("MainWindow", "Log in"))
        self.log_as_admin.setText(_translate("MainWindow", "Log as Admin"))
        self.log_as_ticketsman.setText(_translate("MainWindow", "Log as Ticketsman"))
        self.log_as_driver.setText(_translate("MainWindow", "Log as Driver"))

    def log_as_ad(self):
        self.window = QtWidgets.QMainWindow()
        self.ui = Ui_LoginWindow()
        self.ui.setupUi(self.window)
        self.window.show()
        self.ui.log_type = "admin"

    def log_as_tick(self):
        self.window = QtWidgets.QMainWindow()
        self.ui = Ui_LoginWindow()
        self.ui.setupUi(self.window)
        self.window.show()
        self.ui.log_type = "ticketsman"

    def log_as_dr(self):
        self.window = QtWidgets.QMainWindow()
        self.ui = Ui_LoginWindow()
        self.ui.setupUi(self.window)
        self.window.show()
        self.ui.log_type = "driver"

    def login(self, MainWindow):
        if self.log_type == "admin":
            self.admin_login()

        if self.log_type == "ticketsman":
            self.ticketsman_login()

        if self.log_type == "driver":
            self.driver_login()

    def policeman_is_not_satisfied(self):
        self.policeman.setPixmap(QtGui.QPixmap("interface/logos/policeman_wrong.png"))

    def policeman_satisfied(self):
        self.policeman.setPixmap(QtGui.QPixmap("interface/logos/policeman_right.png"))

    def admin_login(self):
        first_name = self.First_name_input.text()
        last_name = self.last_name_input.text()
        admin = session.query(Administrator).filter(Administrator.FirstName == first_name,
                                                    Administrator.LastName == last_name).first()
        if not admin:
            self.policeman_is_not_satisfied()
            show_message("Wrong firstname or lastname!")
        else:
            self.policeman_satisfied()
            self.window = QtWidgets.QMainWindow()
            self.ui = Ui_AdminWindow()
            self.ui.user = admin
            self.ui.setupUi(self.window)
            self.window.show()

    def ticketsman_login(self):
        first_name = self.First_name_input.text()
        last_name = self.last_name_input.text()
        ticketsman = session.query(Ticketsman).filter(Ticketsman.FirstName == first_name,
                                                      Ticketsman.LastName == last_name).first()
        if not ticketsman:
            self.policeman_is_not_satisfied()
            show_message("Wrong firstname or lastname!")
        else:
            self.policeman_satisfied()

    def driver_login(self):
        first_name = self.First_name_input.text()
        last_name = self.last_name_input.text()
        driver = session.query(Driver).filter(Driver.FirstName == first_name,
                                              Driver.LastName == last_name).first()
        if not driver:
            self.policeman_is_not_satisfied()
            show_message("Wrong firstname or lastname!")
        else:
            self.policeman_satisfied()


def show_message(text):
    msgBox = QMessageBox()
    msgBox.setText(text)
    msgBox.exec_()
